// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard should render the App correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App>
        <BrowserRouter>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
          >
            <Aux>
              <Connect(Message)>
                <Message
                  clearMessagesAction={[Function]}
                  error="error"
                  message="message"
                >
                  <div
                    className="message"
                  >
                    <div
                      className="popupError"
                    >
                      <h2>
                        Error
                      </h2>
                      <a
                        className="close"
                        onClick={[Function]}
                      >
                        ×
                      </a>
                      <div
                        className="content"
                      >
                        error
                      </div>
                    </div>
                    <div
                      className="popup"
                    >
                      <h2>
                        Message
                      </h2>
                      <a
                        className="close"
                        onClick={[Function]}
                      >
                        ×
                      </a>
                      <div
                        className="content"
                      >
                        message
                      </div>
                    </div>
                  </div>
                </Message>
              </Connect(Message)>
              <Connect(withRouter(SideNav))>
                <withRouter(SideNav)
                  closeNav={[Function]}
                  isAuth={false}
                  open={false}
                  signoutAction={[Function]}
                >
                  <Route>
                    <SideNav
                      closeNav={[Function]}
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      isAuth={false}
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      open={false}
                      signoutAction={[Function]}
                    >
                      <div
                        className="Backdrop Close"
                        onClick={[Function]}
                      />
                      <div
                        className="SideDrawer Close"
                        onClick={[Function]}
                      >
                        <div
                          className="Logo"
                        >
                          Ride my way
                        </div>
                        <nav
                          className="Nav"
                        >
                          <NavLink
                            activeClassName="active"
                            activeStyle={
                              Object {
                                "fontWeight": "bolder",
                              }
                            }
                            aria-current="page"
                            exact={true}
                            to="/signup"
                          >
                            <Route
                              exact={true}
                              path="\\\\/signup"
                            >
                              <Link
                                aria-current={null}
                                replace={false}
                                to="/signup"
                              >
                                <a
                                  aria-current={null}
                                  href="/signup"
                                  onClick={[Function]}
                                >
                                  Sign up
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                          <NavLink
                            activeClassName="active"
                            activeStyle={
                              Object {
                                "fontWeight": "bolder",
                              }
                            }
                            aria-current="page"
                            exact={true}
                            to="/signin"
                          >
                            <Route
                              exact={true}
                              path="\\\\/signin"
                            >
                              <Link
                                aria-current={null}
                                replace={false}
                                to="/signin"
                              >
                                <a
                                  aria-current={null}
                                  href="/signin"
                                  onClick={[Function]}
                                >
                                  Sign In
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                        </nav>
                      </div>
                    </SideNav>
                  </Route>
                </withRouter(SideNav)>
              </Connect(withRouter(SideNav))>
              <Switch>
                <Route
                  component={[Function]}
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  exact={true}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  path="/"
                >
                  <Home
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                  >
                    <div>
                      <Connect(Navbar)>
                        <Navbar
                          dispatch={[Function]}
                          isAuth={false}
                        >
                          <div
                            className="Navbar"
                          >
                            <div
                              className="head"
                            >
                              <Connect(Icon)>
                                <Icon
                                  openNav={[Function]}
                                >
                                  <div
                                    className="container"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="bar1"
                                    />
                                    <div
                                      className="bar2"
                                    />
                                    <div
                                      className="bar3"
                                    />
                                  </div>
                                </Icon>
                              </Connect(Icon)>
                              <NavLink
                                activeClassName="active"
                                aria-current="page"
                                className="Logo"
                                to="/"
                              >
                                <Route
                                  path="\\\\/"
                                >
                                  <Link
                                    aria-current="page"
                                    className="Logo active"
                                    replace={false}
                                    style={Object {}}
                                    to="/"
                                  >
                                    <a
                                      aria-current="page"
                                      className="Logo active"
                                      href="/"
                                      onClick={[Function]}
                                      style={Object {}}
                                    >
                                      Ride My Way
                                    </a>
                                  </Link>
                                </Route>
                              </NavLink>
                            </div>
                            <nav
                              className="NavItems"
                            >
                              <NavLink
                                activeClassName="active"
                                activeStyle={
                                  Object {
                                    "backgroundColor": "teal",
                                    "color": "white",
                                  }
                                }
                                aria-current="page"
                                exact={true}
                                to="/signup"
                              >
                                <Route
                                  exact={true}
                                  path="\\\\/signup"
                                >
                                  <Link
                                    aria-current={null}
                                    replace={false}
                                    to="/signup"
                                  >
                                    <a
                                      aria-current={null}
                                      href="/signup"
                                      onClick={[Function]}
                                    >
                                      Sign up
                                    </a>
                                  </Link>
                                </Route>
                              </NavLink>
                              <NavLink
                                activeClassName="active"
                                activeStyle={
                                  Object {
                                    "backgroundColor": "teal",
                                    "color": "white",
                                  }
                                }
                                aria-current="page"
                                exact={true}
                                to="/signin"
                              >
                                <Route
                                  exact={true}
                                  path="\\\\/signin"
                                >
                                  <Link
                                    aria-current={null}
                                    replace={false}
                                    to="/signin"
                                  >
                                    <a
                                      aria-current={null}
                                      href="/signin"
                                      onClick={[Function]}
                                    >
                                       Sign in 
                                    </a>
                                  </Link>
                                </Route>
                              </NavLink>
                            </nav>
                          </div>
                        </Navbar>
                      </Connect(Navbar)>
                      <jumbo>
                        <div
                          className="jumbo"
                        >
                          <div
                            className="jumboChild"
                          >
                            <span>
                              <h1>
                                 You are just a ride away 
                              </h1>
                              <p>
                                We both share a common vision to bring people together.
                                <br />
                                To ride with strangers turn best of friends, join us. 
                              </p>
                            </span>
                            <withRouter(jumboForm)>
                              <Route>
                                <jumboForm
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "createHref": [Function],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "pathname": "/",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                >
                                  <div
                                    className="form"
                                  >
                                    <h2>
                                      Find a ride
                                    </h2>
                                    <form>
                                      <input
                                        onChange={[Function]}
                                        placeholder="Enter your username"
                                        type="text"
                                        value=""
                                      />
                                      <input
                                        onChange={[Function]}
                                        placeholder="Enter your email"
                                        type="text"
                                        value=""
                                      />
                                      <input
                                        className="btn"
                                        onClick={[Function]}
                                        type="button"
                                        value="Join a ride"
                                      />
                                      <div>
                                        <br />
                                        <br />
                                        you would never want to go back if you join.
                                      </div>
                                    </form>
                                  </div>
                                </jumboForm>
                              </Route>
                            </withRouter(jumboForm)>
                          </div>
                          <div
                            className="scroll"
                          >
                            <span />
                          </div>
                        </div>
                      </jumbo>
                      <columns>
                        <div
                          className="columns"
                        >
                          <column
                            img={
                              Object {
                                "alt": "easy way around",
                                "icon": "test-file-stub",
                                "width": 150,
                              }
                            }
                            key="Easiest way around"
                            title="Easiest way around"
                          >
                            <div
                              className="Column"
                            >
                              <img
                                src="test-file-stub"
                                width={150}
                              />
                              <h3>
                                Easiest way around
                              </h3>
                              <p>
                                One tap and you locate a ride near you. Hop in your driver is your friend. And when you get there, just say a big thank you!
                              </p>
                            </div>
                          </column>
                          <column
                            img={
                              Object {
                                "alt": "anytime",
                                "icon": "test-file-stub",
                                "width": 150,
                              }
                            }
                            key="Anytime"
                            title="Anytime"
                          >
                            <div
                              className="Column"
                            >
                              <img
                                src="test-file-stub"
                                width={150}
                              />
                              <h3>
                                Anytime
                              </h3>
                              <p>
                                Early morning flight. Late night drinks. Wherever you’re headed, count on Ride my way for a ride. just make a request!
                              </p>
                            </div>
                          </column>
                          <column
                            img={
                              Object {
                                "alt": "no cost",
                                "icon": "test-file-stub",
                                "width": 150,
                              }
                            }
                            key="Just free as you see"
                            title="Just free as you see"
                          >
                            <div
                              className="Column"
                            >
                              <img
                                src="test-file-stub"
                                width={150}
                              />
                              <h3>
                                Just free as you see
                              </h3>
                              <p>
                                For special occasions, no occasion at all, or when you just a need a bit more room, make a request and you could have a ride in a limo for free.
                              </p>
                            </div>
                          </column>
                        </div>
                      </columns>
                    </div>
                  </Home>
                </Route>
              </Switch>
            </Aux>
          </Router>
        </BrowserRouter>
      </App>
    </Router>
  </BrowserRouter>
</Provider>
`;
